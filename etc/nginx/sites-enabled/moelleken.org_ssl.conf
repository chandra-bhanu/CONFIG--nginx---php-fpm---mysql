server {
  ## server settings
  #listen 80 default backlog=1024;
  #listen [::]:80 default ipv6only=on;
  listen 443 ssl spdy;
  #listen [::]:443 default ipv6only=on;
  ssl on;
  ssl_certificate /var/www/web23/ssl/www.suckup.de.crt;
  ssl_certificate_key /var/www/web23/ssl/www.suckup.de.key;
  server_name moelleken.org www.moelleken.org cdn.moelleken.org *.moelleken.org;

  ## root and index files
  root /var/www/www.moelleken.org/web/;
  #pagespeed MapRewriteDomain cdn.moelleken.org *moelleken.org;
  index index.php index.html index.htm;

  ## parameterization using hostname of access and log filenames
  access_log /var/log/nginx/moelleken.access.log main;
  error_log /var/log/nginx/moelleken.error.log;
  log_not_found on;

  ## if no favicon exists return a 204 (no content error)
  location = /favicon.ico {
    try_files $uri =204;
    log_not_found off;
    access_log off;
  }

  # let's speed up PageSpeed by storing it in the super duper fast memcached
  #pagespeed MemcachedThreads 1;
  #pagespeed MemcachedServers "localhost:11211";

  # Filter settings
  ##pagespeed RewriteLevel CoreFilters;
  #pagespeed RewriteLevel PassThrough;
  #pagespeed EnableFilters collapse_whitespace,remove_comments,rewrite_css,combine_css,combine_javascript,insert_dns_prefetch,rewrite_images,sprite_images,insert_image_dimensions;

  #  Ensure requests for pagespeed optimized resources go to the pagespeed
  #  handler and no extraneous headers get set.
  #location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
  #  add_header "" "";
  #}
  #location ~ "^/ngx_pagespeed_static/" { }
  #location ~ "^/ngx_pagespeed_beacon$" { }
  #location /ngx_pagespeed_statistics {
  #  allow 127.0.0.1; deny all;
  #}
  #location /ngx_pagespeed_message {
  #  allow 127.0.0.1; deny all;
  #}

  ## static files are served directly & don't log
  location ~* \.(?:png|jpe?g|jpeg|gif|ico|m4a|mp[34]|mov|ogg|flv|mid|midi|wav|bmp|rtf|zip|tgz|tar|gz|rar|doc|xls|exe|bz2|pdf|txt|ppt[x]*)$ {

    autoindex off;
    expires max;
    # We bypass all delays in the post-check and pre-check parameters of Cache-Control. Both set to 0.
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate, post-check=0, pre-check=0";
    access_log off;
    log_not_found off;
    ## No need to bleed constant updates. Send the all shebang in one
    ## fell swoop.
    tcp_nodelay on;
    ## Set the OS file cache.
    open_file_cache max=3000 inactive=120s;
    open_file_cache_valid 45s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;
    break;
  }

  # -----------------------------------------

  if (!-e $request_filename){
    rewrite (.*) /router.php?tpl=$1&$query_string;
  }

  location ~ \.php$ {
    include /etc/nginx/fastcgi_params;
    fastcgi_pass unix:/var/www/www.moelleken.org/moelleken.org.socket;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_script_name;
    fastcgi_param THEME lars_web;
    fastcgi_intercept_errors on;
  }

}

