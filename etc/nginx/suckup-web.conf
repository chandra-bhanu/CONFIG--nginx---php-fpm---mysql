
	## Block SQL injections
	set $block_sql_injections 0;
	if ($query_string ~ "union.*select.*\(") {
		set $block_sql_injections 1;
	}
	if ($query_string ~ "union.*all.*select.*") {
		set $block_sql_injections 1;
	}
	if ($query_string ~ "concat.*\(") {
		set $block_sql_injections 1;
	}
	if ($block_sql_injections = 1) {
		return 403;
	}

	## Block file injections
	set $block_file_injections 0;
	if ($query_string ~ "[a-zA-Z0-9_]=http://") {
		set $block_file_injections 1;
	}
	if ($query_string ~ "[a-zA-Z0-9_]=(\.\.//?)+") {
		set $block_file_injections 1;
	}
	if ($query_string ~ "[a-zA-Z0-9_]=/([a-z0-9_.]//?)+") {
		set $block_file_injections 1;
	}
	if ($block_file_injections = 1) {
		return 403;
	}

	## Block common exploits
	set $block_common_exploits 0;
	if ($query_string ~ "(<|%3C).*script.*(>|%3E)") {
		set $block_common_exploits 1;
	}
	if ($query_string ~ "GLOBALS(=|\[|\%[0-9A-Z]{0,2})") {
		set $block_common_exploits 1;
	}
	if ($query_string ~ "_REQUEST(=|\[|\%[0-9A-Z]{0,2})") {
		set $block_common_exploits 1;
	}
	if ($query_string ~ "proc/self/environ") {
		set $block_common_exploits 1;
	}
	if ($query_string ~ "mosConfig_[a-zA-Z_]{1,21}(=|\%3D)") {
		set $block_common_exploits 1;
	}
	if ($query_string ~ "base64_(en|de)code\(.*\)") {
		set $block_common_exploits 1;
	}
	if ($block_common_exploits = 1) {
		return 403;
	}

	## remove any multislashes //
  if ($request_uri ~* "\/\/") {
    rewrite ^(.*)$ $scheme://$host$1 permanent;
  }

  ## Slash am Ende anfuegen
  if ($request_uri ~* "^[\w\-\/]+[^\/?]$") {
    rewrite ^(.*)$ $scheme://$host$1/ permanent;
  }

  ## www eifuegen
# if ($host !~* ^(www|subdomain)) {
#   rewrite ^(.*)$ $scheme://www.$host$1 permanent;
# }

  ## www vorne entfernen
  if ($host ~* ^www\.(.*)) {
    set $host_without_www $1;
    rewrite ^(.*)$ $scheme://$host_without_www$1 permanent;
  }

  ## https nur fuer wp-admin
# if ($request_uri !~* "/wp-") {
#   rewrite ^(.*)$ $scheme://$host/$1 permanent;
# }

  ## immer SSL verwenden
# rewrite ^(.*) https://$server_name$1 permanent;

  ## immer HTTP verwenden
# rewrite ^(.*) http://$server_name$1 permanent;

	## don't use php-files in other directories
  location ~ \..*/.*\.php$ {
    return 403;
  }

  # deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac)
  location ~ /\. {
    deny all;
    access_log off;
    log_not_found off;
  }

  ## all files/directories that are protected and unaccessible from the web
  location ~* ^.*(\.(?:git|svn|htaccess|po[t]*))$ {
    return 404;
  }

  ## disable all methods besides HEAD, GET and POST
  if ( $request_method !~ ^(GET|HEAD|POST)$ ) {
    return 444;
  }

  ## protect the readme.html file to not reveal the installed version
# location = /readme.html {
#   auth_basic "Restricted Access"; # auth realm
#   auth_basic_user_file .htpasswd-users; # htpasswd file
# }

  ## if no favicon exists return a 204 (no content error)
  location = /favicon.ico {
    try_files $uri =204;
    log_not_found off;
    access_log off;
  }

        ## don't log robots.txt requests
        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
        }

        ## static files are served directly & don't log
        location ~* \.(?:png|jpe?g|jpeg|gif|ico|m4a|mp[34]|mov|ogg|flv|mid|midi|wav|bmp|rtf|zip|tgz|tar|gz|rar|doc|xls|exe|bz2|pdf|txt|ppt[x]*)$ {

                autoindex off;
                expires max;
		# We bypass all delays in the post-check and pre-check parameters of Cache-Control. Both set to 0.
                add_header Pragma public;
                add_header Cache-Control "public, must-revalidate, proxy-revalidate, post-check=0, pre-check=0";
                access_log off;
                log_not_found off;
                ## No need to bleed constant updates. Send the all shebang in one
                ## fell swoop.
                tcp_nodelay off;
                ## Set the OS file cache.
                open_file_cache max=3000 inactive=120s;
                open_file_cache_valid 45s;
                open_file_cache_min_uses 2;
                open_file_cache_errors off;
                break;
        }

        ## static files are served directly
        location ~* \.(?:js|css|htm?|js\?ver.*|css\?ver.*)$ {
                set $betterForCache  0;

                if ($args ~* ver=(.*)$) {
                        set $betterForCache  1;
                }
                if ($request_uri ~* "/wp-admin") {
                        set $betterForCache  0;
                }
                if ($betterForCache = 1) {
                        rewrite ^(.*) $scheme://$host$uri? last;
                }

		gzip_static on;

                autoindex off;
                expires 1d;
                add_header Pragma public;
                # We bypass all delays in the post-check and pre-check parameters of Cache-Control. Both set to 0.
                add_header Pragma public;
                add_header Cache-Control "public, must-revalidate, proxy-revalidate, post-check=0, pre-check=0";
                ## No need to bleed constant updates. Send the all shebang in one
                ## fell swoop.
                tcp_nodelay off;
		## Set the OS file cache.
		open_file_cache max=3000 inactive=120s;
		open_file_cache_valid 45s;
		open_file_cache_min_uses 2;
		open_file_cache_errors off;
                break;
        }

        # ----------------------------------------- suckup.de

	## testing
#	rewrite /altes_Verzeichnis/alte_Seite.html http://suckup.de/ last;

	## rewrite other domains
  if ($host ~* (moelleken.org|kkc4u.de|voku-online.de)) {
    rewrite ^(.*)$ http://suckup.de$1 permanent;
  }

        ## Optimierung - "(css/js).php" to "(css/js)"
#        location /wp-content/plugins/wp-special-textboxes/css/ {
#                location ~* \.(css.php)$ {
#                        if ($args ~* ver=(.*)$) {
#                                rewrite ^ $scheme://$host/wp-content/nginx-cache/wp-special-textboxes.css? permanent;
#                        }
#                }
#        }
#        location /wp-content/plugins/wp-special-textboxes/js/ {
#                location ~* \.(js.php)$ {
#                        if ($args ~* ver=(.*)$) {
#                                rewrite ^ $scheme://$host/wp-content/nginx-cache/wstb.js? permanent;
#                        }
#                }
#        }

        ## Feedburner
        set $feed_redirect 'http://feeds.feedburner.com/suckup';
        if ($http_user_agent ~* "FeedBurner") {
                set $feed_redirect '';
        }
        if ($http_user_agent ~* "UniversalFeedParser") {
                set $feed_redirect '';
        }
        if ($http_user_agent ~* "FeedValidator") {
                set $feed_redirect '';
        }
        if ($http_user_agent ~* "Googlebot") {
                set $feed_redirect '';
        }
        if ($feed_redirect ~* "^(.+)$") {
                rewrite ^/feed? $feed_redirect? permanent;
		rewrite ^/comment/feed/? $feed_redirect? permanent;
        }

        ## Sitemap for Multi-Domain
        #rewrite sitemap.xml $scheme://$host/sitemap.xml.gz permanent;
        rewrite sitemaps/suckup-de.xml $scheme://$host/sitemap.xml.gz permanent;

        # ----------------------------------------- WordPress

        ## security for WordPress
        location ~ /(\.|wp-config.php|liesmich.html|readme.html) {
                return 444;
        }

#       include /etc/nginx/WP_Super_Cache.conf;

	## stop Image Hotlinking  - need the HttpRefererModule
#	valid_referers blocked suckup.de www.suckup.de;
#	if ($invalid_referer) {
#		rewrite ^/wp-content/uploads.*\.(gif|jpg|jpeg|png)$ http://suckup.de/banner.png last;
#	}

        ## Pass uploaded files to wp-includes/ms-files.php.
        rewrite /files/$ /index.php last;

        ## Wordpress3
#       if (!-e $request_filename) {
#               rewrite ^(.+)$ /index.php?q=$1 last;
#               break;
#       }

        ## Wordpress3 MU
#       if (!-e $request_filename) {
#               rewrite ^.+/?(/wp-.*) $1 last;
#               rewrite ^.+/?(/.*\.php)$ $1 last;
#               rewrite ^(.+)$ /index.php?q=$1 last;
#               break;
#       }


        ## Wordpress3 Multi-Domain
        rewrite ^.*/files/(.*)$ /wp-includes/ms-files.php?file=$1 last;
        if (!-e $request_filename) {
                rewrite ^.+/?(/ms-.*) $1 last;
                rewrite ^/files/(.+) /wp-includes/ms-files.php?file=$1 last;
                rewrite ^.+/?(/wp-.*) $1 last;
                rewrite ^.+/?(/.*.php)$ $1 last;
                rewrite ^(.+)$ /index.php?q=$1 last;
                break;
        }
        location ~* ^.+.(htm|html|jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js)$ {
                access_log off;
                expires max;
                root /var/www/www.suckup.de/web/;
                rewrite ^/.(/wp-.*/.*.(html|jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js))$ $1 last;
                rewrite ^.*/files/(.*(html|jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js))$ /wp-includes/ms-files.php?file=$1 last;
                if (!-e $request_filename) {
                        rewrite ^.+/?(/wp-.*) $1 last;
                        rewrite ^.+/?(/.*.php)$ $1 last;
                        rewrite ^(.+)$ /index.php?q=$1 last;
                        access_log off;
                        expires max;
                        break;
                }
        }

        ## Wordpress-Forum
#       if (!-e $request_filename) {
#               rewrite ^/forums/topic/(.*)$ /forums/topic.php?q=$1 last;
#               rewrite ^/forums/forum/(.*)$ /forums/forum.php?q=$1 last;
#               rewrite ^/forums/profile/(.*)$ /forums/profile.php?q=$1 last;
#               rewrite ^/forums/view/(.*)$ /forums/view.php?q=$1 last;
#               rewrite ^/forums/tags/(.*)$ /forums/tags.php?q=$1 last;
#               rewrite ^/forums/rss/(.*)$ /forums/rss.php?q=$1 last;
#               rewrite ^/forums/bb-admin/ /forums/bb-admin/index.php last;
#               rewrite ^/forums/ /forums/index.php last;
#               break;
#       }

	# ----------------------------------------- maybe we are done here 

        if (-f $request_filename) {
                break;
        }

